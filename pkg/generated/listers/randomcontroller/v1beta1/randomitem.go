/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	randomcontrollerv1beta1 "github.com/saiharsha/random-controller/pkg/apis/randomcontroller/v1beta1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// RandomItemLister helps list RandomItems.
// All objects returned here must be treated as read-only.
type RandomItemLister interface {
	// List lists all RandomItems in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*randomcontrollerv1beta1.RandomItem, err error)
	// RandomItems returns an object that can list and get RandomItems.
	RandomItems(namespace string) RandomItemNamespaceLister
	RandomItemListerExpansion
}

// randomItemLister implements the RandomItemLister interface.
type randomItemLister struct {
	listers.ResourceIndexer[*randomcontrollerv1beta1.RandomItem]
}

// NewRandomItemLister returns a new RandomItemLister.
func NewRandomItemLister(indexer cache.Indexer) RandomItemLister {
	return &randomItemLister{listers.New[*randomcontrollerv1beta1.RandomItem](indexer, randomcontrollerv1beta1.Resource("randomitem"))}
}

// RandomItems returns an object that can list and get RandomItems.
func (s *randomItemLister) RandomItems(namespace string) RandomItemNamespaceLister {
	return randomItemNamespaceLister{listers.NewNamespaced[*randomcontrollerv1beta1.RandomItem](s.ResourceIndexer, namespace)}
}

// RandomItemNamespaceLister helps list and get RandomItems.
// All objects returned here must be treated as read-only.
type RandomItemNamespaceLister interface {
	// List lists all RandomItems in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*randomcontrollerv1beta1.RandomItem, err error)
	// Get retrieves the RandomItem from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*randomcontrollerv1beta1.RandomItem, error)
	RandomItemNamespaceListerExpansion
}

// randomItemNamespaceLister implements the RandomItemNamespaceLister
// interface.
type randomItemNamespaceLister struct {
	listers.ResourceIndexer[*randomcontrollerv1beta1.RandomItem]
}
